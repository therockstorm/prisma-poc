/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as Context from "../context"
import * as prisma from "@prisma/client"



declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AccountCreateInput: { // input type
    email: string; // String!
    name?: string | null; // String
    posts?: NexusGenInputs['PostCreateManyWithoutAccountInput'] | null; // PostCreateManyWithoutAccountInput
    profile?: NexusGenInputs['ProfileCreateOneWithoutAccountInput'] | null; // ProfileCreateOneWithoutAccountInput
  }
  PostCreateManyWithoutAccountInput: { // input type
    connect?: NexusGenInputs['PostWhereUniqueInput'][] | null; // [PostWhereUniqueInput!]
    create?: NexusGenInputs['PostCreateWithoutAccountInput'][] | null; // [PostCreateWithoutAccountInput!]
  }
  PostCreateWithoutAccountInput: { // input type
    content?: string | null; // String
    created?: any | null; // DateTime
    published?: boolean | null; // Boolean
    title: string; // String!
  }
  PostWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  ProfileCreateOneWithoutAccountInput: { // input type
    connect?: NexusGenInputs['ProfileWhereUniqueInput'] | null; // ProfileWhereUniqueInput
    create?: NexusGenInputs['ProfileCreateWithoutAccountInput'] | null; // ProfileCreateWithoutAccountInput
  }
  ProfileCreateWithoutAccountInput: { // input type
    bio?: string | null; // String
  }
  ProfileWhereUniqueInput: { // input type
    accountId?: number | null; // Int
    id?: number | null; // Int
  }
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  Account: prisma.Account;
  Mutation: {};
  Post: prisma.Post;
  Profile: prisma.Profile;
  Query: {};
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  AccountCreateInput: NexusGenInputs['AccountCreateInput'];
  PostCreateManyWithoutAccountInput: NexusGenInputs['PostCreateManyWithoutAccountInput'];
  PostCreateWithoutAccountInput: NexusGenInputs['PostCreateWithoutAccountInput'];
  PostWhereUniqueInput: NexusGenInputs['PostWhereUniqueInput'];
  ProfileCreateOneWithoutAccountInput: NexusGenInputs['ProfileCreateOneWithoutAccountInput'];
  ProfileCreateWithoutAccountInput: NexusGenInputs['ProfileCreateWithoutAccountInput'];
  ProfileWhereUniqueInput: NexusGenInputs['ProfileWhereUniqueInput'];
}

export interface NexusGenFieldTypes {
  Account: { // field return type
    email: string; // String!
    id: number; // Int!
    name: string | null; // String
    posts: NexusGenRootTypes['Post'][]; // [Post!]!
    profile: NexusGenRootTypes['Profile'] | null; // Profile
  }
  Mutation: { // field return type
    createDraft: NexusGenRootTypes['Post']; // Post!
    deleteOnePost: NexusGenRootTypes['Post'] | null; // Post
    publish: NexusGenRootTypes['Post'] | null; // Post
    signupAccount: NexusGenRootTypes['Account']; // Account!
  }
  Post: { // field return type
    account: NexusGenRootTypes['Account'] | null; // Account
    content: string | null; // String
    created: any; // DateTime!
    id: number; // Int!
    published: boolean; // Boolean!
    title: string; // String!
  }
  Profile: { // field return type
    account: NexusGenRootTypes['Account'] | null; // Account
    bio: string | null; // String
    id: number; // Int!
  }
  Query: { // field return type
    feed: NexusGenRootTypes['Post'][]; // [Post!]!
    filterPosts: NexusGenRootTypes['Post'][]; // [Post!]!
    post: NexusGenRootTypes['Post'] | null; // Post
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createDraft: { // args
      content?: string | null; // String
      email?: string | null; // String
      title: string; // String!
    }
    deleteOnePost: { // args
      where: NexusGenInputs['PostWhereUniqueInput']; // PostWhereUniqueInput!
    }
    publish: { // args
      id?: number | null; // Int
    }
    signupAccount: { // args
      data: NexusGenInputs['AccountCreateInput']; // AccountCreateInput!
    }
  }
  Query: {
    filterPosts: { // args
      searchString?: string | null; // String
    }
    post: { // args
      where: NexusGenInputs['PostWhereUniqueInput']; // PostWhereUniqueInput!
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Account" | "Mutation" | "Post" | "Profile" | "Query";

export type NexusGenInputNames = "AccountCreateInput" | "PostCreateManyWithoutAccountInput" | "PostCreateWithoutAccountInput" | "PostWhereUniqueInput" | "ProfileCreateOneWithoutAccountInput" | "ProfileCreateWithoutAccountInput" | "ProfileWhereUniqueInput";

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: Context.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}